{"version":3,"sources":["redux/reducers/authReducer.js","redux/reducers/errorReducer.js","redux/reducers/index.js","redux/actions/type.js","store.js","redux/actions/errorActions.js","redux/actions/authActions.js","components/LoginModal/LoginModal.js","components/RegisterModal/RegisterModal.js","components/Sidebar/Sidebar.js","components/UserProfile/UserProfile.js","components/Logout/Logout.js","components/DropdownMenu/DropdownMenu.js","components/UserDashboard/UserDashboard.js","components/VendorDashboard/VendorDashboard.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","openloginModal","openregisterModal","msg","status","id","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","removeItem","error","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","returnErrors","_ref","clearErrors","openLoginModal","dispatch","LoginModal","visible","_this","props","email","password","toggleModal","setState","closeLoginModal","handleCancel","handleCreate","_this$state","login","onChange","e","defineProperty","target","name","value","openRegisterModal","prevProps","_this$props","this","console","log","_this$state2","react_default","a","createElement","modal","title","okText","onCancel","onOk","es_alert","message","es_form","layout","Item","label","input","className","onClick","Component","connect","_ref2","body","JSON","stringify","axios","post","headers","Content-Type","then","res","data","catch","err","response","RegisterModal","isVendor","closeRegisterModal","newUser","register","es_radio","Group","buttonStyle","Button","Sider","Layout","SideBar","react","style","overflow","height","left","trigger","collapsible","collapsedWidth","collapsed","collapseProp","menu","theme","mode","defaultSelectedKeys","key","icon","beforeUpload","file","isJPG","isLt2M","size","UserProfile","newpassword","phone","loading","handleChange","info","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","uploadButton","row","col","span","upload","listType","showUploadList","src","alt","es_button","Logout","react_router_dom","to","logout","SubMenu","Menu","MenuItemGroup","ItemGroup","DropdownMenu","current","handleClick","selectedKeys","components_Logout_Logout","UserDashboard","VendorDashboard","Header","Content","Navbar","toggle","_this$props$auth","position","zIndex","width","lineHeight","margin","components_DropdownMenu_DropdownMenu","components_LoginModal_LoginModal","components_RegisterModal_RegisterModal","Sidebar_Sidebar","marginTop","padding","background","minHeight","react_router","exact","path","component","App","es","components_Navbar_Navbar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39b5f892.chunk.js","sourcesContent":["import { USER_LOADING, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, AUTH_ERROR, OPEN_LOGIN_MODAL, CLOSE_LOGIN_MODAL, OPEN_REGISTER_MODAL, CLOSE_REGISTER_MODAL } from '../actions/type';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null,\n  openloginModal: false,\n  openregisterModal: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case USER_LOADED:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: true,\n        user: action.payload\n      }\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return {\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        openloginModal: false,\n        openregisterModal: false\n      }\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n    case AUTH_ERROR:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null\n      }\n    case OPEN_LOGIN_MODAL:\n      return {\n        ...state,\n        openloginModal: true,\n        openregisterModal: false\n      }\n    case CLOSE_LOGIN_MODAL:\n      return {\n        ...state,\n        openloginModal: false\n      }\n    case OPEN_REGISTER_MODAL:\n      return {\n        ...state,\n        openregisterModal: true,\n        openloginModal: false\n      }\n    case CLOSE_REGISTER_MODAL:\n      return {\n        ...state,\n        openregisterModal: false\n      }\n    default:\n      return state;\n  }\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/type';\n\nconst initialState = {\n  msg: '',\n  status: '',\n  id: null\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        ...state,\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        msg: '',\n        status: '',\n        id: null\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport AuthReducer from './authReducer';\nimport ErrorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: AuthReducer,\n  error: ErrorReducer\n});","export const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const AUTH_ERROR = 'AITH_ERROR';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const OPEN_LOGIN_MODAL = 'OPEN_LOGIN_MODAL';\nexport const CLOSE_LOGIN_MODAL = 'CLOSE_LOGIN_MODAL';\nexport const OPEN_REGISTER_MODAL = 'OPEN_REGISTER_MODAL';\nexport const CLOSE_REGISTER_MODAL = 'CLOSE_REGISTER_MODAL';","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...middleware)));\n\nexport default store;","import { GET_ERRORS, CLEAR_ERRORS } from './type';\n\nexport const returnErrors = ({ msg }, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  }\n}\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  }\n}\n","import { USER_LOADING, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, AUTH_ERROR, OPEN_LOGIN_MODAL, CLOSE_LOGIN_MODAL, OPEN_REGISTER_MODAL, CLOSE_REGISTER_MODAL } from './type';\nimport axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nexport const loaduser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  axios.get('/api/login/user', tokenConfig(getState))\n    .then(res => dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    }))\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    })\n}\n\nexport const register = ({ name, email, password, isVendor }) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({ name, email, password, isVendor });\n  axios.post('/api/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }))\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n      dispatch({ type: REGISTER_FAIL })\n    })\n}\n\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const body = JSON.stringify({ email, password});\n  axios.post('/api/login', body, config)\n    .then(res => dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    }))\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n      dispatch({ type: LOGIN_FAIL })\n    })\n}\n\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT_SUCCESS });\n}\n\nexport const openLoginModal = () => dispatch => {\n  dispatch({ type: OPEN_LOGIN_MODAL });\n}\n\nexport const closeLoginModal = () => dispatch => {\n  dispatch({ type: CLOSE_LOGIN_MODAL });\n}\n\nexport const openRegisterModal = () => dispatch => {\n  dispatch({ type: OPEN_REGISTER_MODAL });\n}\n\nexport const closeRegisterModal = () => dispatch => {\n  dispatch({ type: CLOSE_REGISTER_MODAL });\n}\n\n\nexport const tokenConfig = getState => {\n  const token = getState().auth.token;\n  const config = {\n    header: {\n      'Content-Type': 'application/json'\n    }\n  }\n  if (token) {\n    config.header['x-auth-token'] = token;\n  }\n  return config;\n}","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport './LoginModal.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  login,\n  closeLoginModal,\n  openRegisterModal\n} from \"../../redux/actions/authActions\";\nimport { clearErrors } from \"../../redux/actions/errorActions\";\nimport { Modal, Form, Input, Alert } from \"antd\";\n\nclass LoginModal extends Component {\n  state = {\n    visible: this.props.openloginModal,\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    openloginModal: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    closeLoginModal: PropTypes.func.isRequired,\n    openRegisterModal: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.state.visible) {\n      if (isAuthenticated) {\n        console.log(\"hello\");\n        this.toggleModal();\n      }\n    }\n  }\n\n  toggleModal = () => {\n    this.props.clearErrors();\n    this.setState({\n      email: \"\",\n      password: \"\",\n    });\n    this.props.closeLoginModal();\n  };\n\n  handleCancel = () => {\n    this.toggleModal();\n  };\n\n  handleCreate = () => {\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n\n    this.props.login(user);\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  openRegisterModal = () => {\n    this.props.clearErrors();\n    this.setState({\n      email: \"\",\n      password: \"\",\n    });\n    this.props.openRegisterModal();\n  };\n\n  render() {\n    const { visible, email, password, msg } = this.state;\n    return (\n      <div>\n        <Modal\n          visible={visible}\n          title=\"Login\"\n          okText=\"Login\"\n          onCancel={this.handleCancel}\n          onOk={this.handleCreate}\n        >\n          {msg ? <Alert message={msg} type=\"error\" /> : null}\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Email\">\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            Don't have an account?\n            <button className=\"newbutton\" onClick={this.openRegisterModal}>Register</button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  openloginModal: state.auth.openloginModal\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors, closeLoginModal, openRegisterModal }\n)(LoginModal);\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport './RegisterModal.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Modal, Form, Input, Alert, Radio } from 'antd';\nimport {\n  register,\n  openLoginModal,\n  closeRegisterModal\n} from \"../../redux/actions/authActions\";\nimport { clearErrors } from \"../../redux/actions/errorActions\";\n\nclass RegisterModal extends Component {\n  state = {\n    visible: this.props.openregisterModal,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    isVendor: false,\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    openregisterModal: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    openLoginModal: PropTypes.func.isRequired,\n    closeRegisterModal: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.state.visible) {\n      if (isAuthenticated) {\n        this.toggleModal();\n      }\n    }\n  }\n\n  toggleModal = () => {\n    this.props.clearErrors();\n    this.setState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      isVendor: false\n    });\n    this.props.closeRegisterModal();\n  };\n\n  handleCancel = () => {\n    this.toggleModal();\n  };\n\n  handleCreate = () => {\n    const { name, email, password, isVendor } = this.state;\n    const newUser = {\n      name,\n      email,\n      password,\n      isVendor\n    };\n    this.props.register(newUser);\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  openLoginModal = () => {\n    this.props.clearErrors();\n    this.setState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      isVendor: false\n    });\n    this.props.openLoginModal();\n  };\n\n  render() {\n    const { visible, name, email, password, isVendor, msg } = this.state;\n    return (\n      <div>\n        <Modal\n          visible={visible}\n          title=\"Register\"\n          okText=\"Register\"\n          onCancel={this.handleCancel}\n          onOk={this.handleCreate}\n        >\n          {msg ? <Alert message={msg} type=\"error\" /> : null}\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Are you a vendor also?\">\n              <Radio.Group name=\"isVendor\" buttonStyle=\"solid\" value={isVendor} onChange={this.onChange}>\n                <Radio.Button value=\"true\">Yes</Radio.Button>\n                <Radio.Button value=\"false\">No</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item label=\"Name\">\n              <Input name=\"name\" value={name} onChange={this.onChange} />\n            </Form.Item>\n            <Form.Item label=\"Email\">\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"Password\">\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            Already have an account?\n            <button className=\"newbutton2\" onClick={this.openLoginModal}>Login</button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  openregisterModal: state.auth.openregisterModal\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors, openLoginModal, closeRegisterModal }\n)(RegisterModal);\n","import React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport './Sidebar.css'\n\nimport { Layout, Menu, Icon } from \"antd\";\n\nconst { Sider } = Layout;\n\nclass SideBar extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Sider\n          style={{ overflow: 'auto', height: '100vh', left: 0 }}\n          trigger={null}\n          collapsible\n          collapsedWidth={95}\n          collapsed={this.props.collapseProp}\n        >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              <Icon type=\"form\" />\n              <span>Plumber</span>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"form\" />\n              <span>Washerman</span>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"form\" />\n              <span>Electrician</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n              <Icon type=\"form\" />\n              <span>Maid</span>\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n              <Icon type=\"form\" />\n              <span>Mason</span>\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n              <Icon type=\"form\" />\n              <span>Carpenter</span>\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n              <Icon type=\"form\" />\n              <span>Painter</span>\n            </Menu.Item>\n            <Menu.Item key=\"8\">\n              <Icon type=\"form\" />\n              <span>Regular Repair Man</span>\n            </Menu.Item>\n            <Menu.Item key=\"9\">\n              <Icon type=\"form\" />\n              <span>Beautician</span>\n            </Menu.Item>\n            <Menu.Item key=\"10\">\n              <Icon type=\"form\" />\n              <span>Person 1</span>\n            </Menu.Item>\n            <Menu.Item key=\"11\">\n              <Icon type=\"form\" />\n              <span>Person 2</span>\n            </Menu.Item>\n            <Menu.Item key=\"12\">\n              <Icon type=\"form\" />\n              <span>Person 3</span>\n            </Menu.Item>\n            <Menu.Item key=\"13\">\n              <Icon type=\"form\" />\n              <span>Person 4</span>\n            </Menu.Item>\n            <Menu.Item key=\"14\">\n              <Icon type=\"form\" />\n              <span>Person 5</span>\n            </Menu.Item>\n            <Menu.Item key=\"15\">\n              <Icon type=\"form\" />\n              <span>Person 6</span>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n      </Fragment>\n    );\n  }\n}\n\nexport default SideBar;\n","\nimport React, { Component, Fragment } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { connect } from \"react-redux\";\nimport { Form,Input,Checkbox,Button,Row,Col,Upload, Icon, message } from \"antd\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return isJPG && isLt2M;\n}\n\nclass UserProfile extends Component {\n  state={\n    name:\"\",\n    email:\"\",\n    password:\"\",\n    newpassword:\"\",\n    phone:\"\",\n    // Property used for uploading image\n    loading:false\n }\n onChange = e => {\n  this.setState({ [e.target.name]: e.target.value });\n  };\n  // Function is used for uploading picture\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false,\n      }));\n    }\n  } \n  render() {\n    const { isAuthenticated, user } = this.props;\n    const {name,email,password,newpassword,phone}=this.state;\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const imageUrl = this.state.imageUrl;\n    if (isAuthenticated && user.isVendor === false) {\n      return (\n        <Fragment>\n          <Form layout=\"vertical\">\n            <Row>\n              <Col span={8}>\n                <p>Here is a pic</p>\n                <Upload\n                  name=\"avatar\"\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  showUploadList={false}\n                  action=\"//jsonplaceholder.typicode.com/posts/\"\n                  beforeUpload={beforeUpload}\n                  onChange={this.handleChange}\n                >\n                  {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : uploadButton}\n                </Upload>\n              \n              </Col>\n              <Col span={16}>\n              <Form.Item label=\"Username\">\n              <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.onChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"E-mail Id\">\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n              />            \n            </Form.Item>\n            <Form.Item label=\"New Password\">\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            <Form.Item label=\"Confirm New Password\">\n              <Input\n                type=\"password\"\n                name=\"newpassword\"\n                value={newpassword}\n                onChange={this.onChange}\n              />           \n             </Form.Item>\n            <Form.Item label=\"Phone Number\">\n             <Input\n                type=\"text\"\n                name=\"phone\"\n                value={phone}\n                onChange={this.onChange}\n              />\n            </Form.Item>\n            <Button>UPDATE</Button>\n              </Col>\n            </Row>\n            \n          </Form>\n        </Fragment>\n      )\n    }\n    else {\n      return (\n        <Fragment>\n          <p>Please login to view user Profile.</p>\n        </Fragment>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UserProfile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../redux/actions/authActions';\nimport { Icon } from 'antd';\n\nclass Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n  render() {\n    return (\n      <Link to=\"/\" onClick={this.props.logout}>\n        <Icon type=\"export\" />\n        Logout\n      </Link>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport './DropdownMenu.css';\nimport { connect } from 'react-redux';\nimport Logout from '../Logout/Logout';\nimport { Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass DropdownMenu extends Component {\n  state = {\n    current: \"mail\"\n  };\n\n  handleClick = e => {\n    console.log(\"click \", e);\n    this.setState({\n      current: e.key\n    });\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"horizontal\"\n        theme=\"dark\"\n      >\n        <SubMenu\n          title={\n            <span className=\"submenu-title-wrapper\">\n              <Icon type=\"setting\" />\n            </span>\n          }\n        >\n          <MenuItemGroup>\n            {user.isVendor ? (\n              <Menu.Item>\n                <Link to=\"/vendorDashboard\">\n                  <Icon type=\"idcard\" />\n                  Dashboard\n                </Link>\n              </Menu.Item>\n            ) : (\n                <Menu.Item>\n                  <Link to=\"/userDashboard\">\n                    <Icon type=\"idcard\" />\n                    Dashboard\n                </Link>\n                </Menu.Item>\n              )}\n            <Menu.Item>\n              <Logout />\n            </Menu.Item>\n          </MenuItemGroup>\n        </SubMenu>\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(DropdownMenu);\n","import React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\n\nclass UserDashboard extends Component {\n  render() {\n    const { isAuthenticated, user } = this.props;\n    if (isAuthenticated && user.isVendor === false) {\n      return (\n        <Fragment>\n          <p>User Logged in</p>\n        </Fragment>\n      )\n    }\n    else {\n      return (\n        <Fragment>\n          <p>Please login to view user Dashboard.</p>\n        </Fragment>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UserDashboard);","import React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\n\nclass VendorDashboard extends Component {\n  render() {\n    const { isAuthenticated, user } = this.props;\n    if (isAuthenticated && user.isVendor === true) {\n      return (\n        <Fragment>\n          <p>Vendor Logged in</p>\n        </Fragment>\n      )\n    }\n    else {\n      return (\n        <Fragment>\n          <p>Please login to view vendor Dashboard.</p>\n        </Fragment>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(VendorDashboard);\n","import React, { Component } from 'react';\nimport './Navbar.css';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginModal from '../LoginModal/LoginModal';\nimport RegisterModal from '../RegisterModal/RegisterModal';\nimport { Layout, Menu, Icon, Button } from 'antd';\nimport SideBar from '../Sidebar/Sidebar';\nimport { openLoginModal } from '../../redux/actions/authActions';\nimport UserProfile from '../UserProfile/UserProfile';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu';\nimport UserDashboard from '../UserDashboard/UserDashboard';\nimport VendorDashboard from '../VendorDashboard/VendorDashboard';\n\nconst { Header, Content } = Layout;\n\nclass Navbar extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    openLoginModal: PropTypes.func.isRequired\n  };\n  state = {\n    collapsed: false\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  openLoginModal = () => {\n    this.props.openLoginModal();\n  };\n  render() {\n    const {\n      isAuthenticated,\n      user,\n      openloginModal,\n      openregisterModal\n    } = this.props.auth;\n\n    return (\n      <Router>\n        <Layout>\n          <Header\n            style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n            className=\"header\"\n          >\n            {isAuthenticated ? (\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                style={{ lineHeight: \"64px\" }}\n              >\n                <Menu.Item key=\"1\" className=\"left\">\n                  <Icon\n                    className=\"trigger\"\n                    type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                    onClick={this.toggle}\n                  />\n                  Sahaayak\n                </Menu.Item>\n                <Menu.Item key=\"2\" className=\"right\" style={{ margin: 9 }}>\n                  <DropdownMenu />\n                </Menu.Item>\n                <Menu.Item key=\"4\" className=\"right\">\n                  {user ? user.name : null}\n                </Menu.Item>\n              </Menu>\n            ) : (\n                <Menu\n                  theme=\"dark\"\n                  mode=\"horizontal\"\n                  style={{ lineHeight: \"64px\" }}\n                >\n                  <Menu.Item key=\"1\" className=\"left\">\n                    <Icon\n                      className=\"trigger\"\n                      type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                      onClick={this.toggle}\n                    />\n                    Sahaayak\n                </Menu.Item>\n                  <Menu.Item key=\"3\" className=\"right\">\n                    <Button type=\"primary\" onClick={this.openLoginModal}>\n                      Login\n                  </Button>\n                    {openloginModal ? <LoginModal /> : null}\n                    {openregisterModal ? <RegisterModal /> : null}\n                  </Menu.Item>\n                </Menu>\n              )}\n          </Header>\n          <SideBar collapseProp={this.state.collapsed} />\n          <Layout>\n            <Content\n              style={{\n                marginTop: \"50px\",\n                padding: 24,\n                background: \"#fff\",\n                minHeight: 280\n              }}\n            >\n              <Switch>\n                <Route exact path=\"/userProfile\" component={UserProfile} />\n                <Route exact path=\"/userDashboard\" component={UserDashboard} />\n                <Route exact path=\"/vendorDashboard\" component={VendorDashboard} />\n\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { openLoginModal }\n)(Navbar);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Navbar />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}